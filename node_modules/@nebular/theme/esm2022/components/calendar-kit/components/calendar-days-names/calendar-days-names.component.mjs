/**
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
import { ChangeDetectionStrategy, Component, Input, HostBinding } from '@angular/core';
import { NbCalendarSize } from '../../model';
import * as i0 from "@angular/core";
import * as i1 from "../../services/date.service";
import * as i2 from "@angular/common";
export class NbCalendarDaysNamesComponent {
    get isLarge() {
        return this.size === NbCalendarSize.LARGE;
    }
    constructor(dateService) {
        this.dateService = dateService;
    }
    ngOnInit() {
        const days = this.createDaysNames();
        this.days = this.shiftStartOfWeek(days);
    }
    ngOnChanges({ firstDayOfWeek }) {
        if (firstDayOfWeek) {
            const days = this.createDaysNames();
            this.days = this.shiftStartOfWeek(days);
        }
    }
    createDaysNames() {
        return this.dateService.getDayOfWeekNames()
            .map(this.markIfHoliday);
    }
    shiftStartOfWeek(days) {
        const firstDayOfWeek = this.firstDayOfWeek ?? this.dateService.getFirstDayOfWeek();
        for (let i = 0; i < firstDayOfWeek; i++) {
            days.push(days.shift());
        }
        return days;
    }
    markIfHoliday(name, i) {
        return { name, isHoliday: i % 6 === 0 };
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: NbCalendarDaysNamesComponent, deps: [{ token: i1.NbDateService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: NbCalendarDaysNamesComponent, selector: "nb-calendar-days-names", inputs: { size: "size", firstDayOfWeek: "firstDayOfWeek" }, host: { properties: { "class.size-large": "this.isLarge" } }, usesOnChanges: true, ngImport: i0, template: `
    <div class="day" *ngFor="let day of days" [class.holiday]="day.isHoliday">{{ day.name }}</div>
  `, isInline: true, styles: ["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */:host{display:flex;justify-content:space-between}:host .day{display:flex;align-items:center;justify-content:center}\n"], dependencies: [{ kind: "directive", type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: NbCalendarDaysNamesComponent, decorators: [{
            type: Component,
            args: [{ selector: 'nb-calendar-days-names', template: `
    <div class="day" *ngFor="let day of days" [class.holiday]="day.isHoliday">{{ day.name }}</div>
  `, changeDetection: ChangeDetectionStrategy.OnPush, styles: ["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */:host{display:flex;justify-content:space-between}:host .day{display:flex;align-items:center;justify-content:center}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.NbDateService }]; }, propDecorators: { size: [{
                type: Input
            }], isLarge: [{
                type: HostBinding,
                args: ['class.size-large']
            }], firstDayOfWeek: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FsZW5kYXItZGF5cy1uYW1lcy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9zcmMvZnJhbWV3b3JrL3RoZW1lL2NvbXBvbmVudHMvY2FsZW5kYXIta2l0L2NvbXBvbmVudHMvY2FsZW5kYXItZGF5cy1uYW1lcy9jYWxlbmRhci1kYXlzLW5hbWVzLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztHQUlHO0FBRUgsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBVSxLQUFLLEVBQUUsV0FBVyxFQUE0QixNQUFNLGVBQWUsQ0FBQztBQUV6SCxPQUFPLEVBQWlCLGNBQWMsRUFBd0IsTUFBTSxhQUFhLENBQUM7Ozs7QUFZbEYsTUFBTSxPQUFPLDRCQUE0QjtJQU92QyxJQUNJLE9BQU87UUFDVCxPQUFPLElBQUksQ0FBQyxJQUFJLEtBQUssY0FBYyxDQUFDLEtBQUssQ0FBQztJQUM1QyxDQUFDO0lBUUQsWUFBb0IsV0FBNkI7UUFBN0IsZ0JBQVcsR0FBWCxXQUFXLENBQWtCO0lBQ2pELENBQUM7SUFFRCxRQUFRO1FBQ04sTUFBTSxJQUFJLEdBQW9CLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztRQUNyRCxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUMxQyxDQUFDO0lBRUQsV0FBVyxDQUFDLEVBQUMsY0FBYyxFQUFnQjtRQUN6QyxJQUFJLGNBQWMsRUFBRTtZQUNsQixNQUFNLElBQUksR0FBb0IsSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO1lBQ3JELElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxDQUFDO1NBQ3pDO0lBQ0gsQ0FBQztJQUVPLGVBQWU7UUFDckIsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLGlCQUFpQixFQUFFO2FBQ3hDLEdBQUcsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7SUFDN0IsQ0FBQztJQUVPLGdCQUFnQixDQUFDLElBQXFCO1FBQzVDLE1BQU0sY0FBYyxHQUFHLElBQUksQ0FBQyxjQUFjLElBQUksSUFBSSxDQUFDLFdBQVcsQ0FBQyxpQkFBaUIsRUFBRSxDQUFDO1FBQ25GLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxjQUFjLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDdkMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQztTQUN6QjtRQUVELE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVPLGFBQWEsQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUMzQixPQUFPLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDO0lBQzFDLENBQUM7K0dBakRVLDRCQUE0QjttR0FBNUIsNEJBQTRCLDZNQUw3Qjs7R0FFVDs7NEZBR1UsNEJBQTRCO2tCQVJ4QyxTQUFTOytCQUNFLHdCQUF3QixZQUV4Qjs7R0FFVCxtQkFDZ0IsdUJBQXVCLENBQUMsTUFBTTtvR0FNdEMsSUFBSTtzQkFBWixLQUFLO2dCQUlGLE9BQU87c0JBRFYsV0FBVzt1QkFBQyxrQkFBa0I7Z0JBU3RCLGNBQWM7c0JBQXRCLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgQWt2ZW8uIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxuICovXG5cbmltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIE9uSW5pdCwgSW5wdXQsIEhvc3RCaW5kaW5nLCBTaW1wbGVDaGFuZ2VzLCBPbkNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgTmJDYWxlbmRhckRheSwgTmJDYWxlbmRhclNpemUsIE5iQ2FsZW5kYXJTaXplVmFsdWVzIH0gZnJvbSAnLi4vLi4vbW9kZWwnO1xuaW1wb3J0IHsgTmJEYXRlU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL2RhdGUuc2VydmljZSc7XG5cblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbmItY2FsZW5kYXItZGF5cy1uYW1lcycsXG4gIHN0eWxlVXJsczogWycuL2NhbGVuZGFyLWRheXMtbmFtZXMuY29tcG9uZW50LnNjc3MnXSxcbiAgdGVtcGxhdGU6IGBcbiAgICA8ZGl2IGNsYXNzPVwiZGF5XCIgKm5nRm9yPVwibGV0IGRheSBvZiBkYXlzXCIgW2NsYXNzLmhvbGlkYXldPVwiZGF5LmlzSG9saWRheVwiPnt7IGRheS5uYW1lIH19PC9kaXY+XG4gIGAsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbmV4cG9ydCBjbGFzcyBOYkNhbGVuZGFyRGF5c05hbWVzQ29tcG9uZW50PEQ+IGltcGxlbWVudHMgT25Jbml0LCBPbkNoYW5nZXMge1xuXG4gIGRheXM6IE5iQ2FsZW5kYXJEYXlbXTtcblxuICBASW5wdXQoKSBzaXplOiBOYkNhbGVuZGFyU2l6ZTtcbiAgc3RhdGljIG5nQWNjZXB0SW5wdXRUeXBlX3NpemU6IE5iQ2FsZW5kYXJTaXplVmFsdWVzO1xuXG4gIEBIb3N0QmluZGluZygnY2xhc3Muc2l6ZS1sYXJnZScpXG4gIGdldCBpc0xhcmdlKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLnNpemUgPT09IE5iQ2FsZW5kYXJTaXplLkxBUkdFO1xuICB9XG5cbiAgLyoqXG4gICAqIFNldHMgZmlyc3QgZGF5IG9mIHRoZSB3ZWVrLCBpdCBjYW4gYmUgMSBpZiB3ZWVrIHN0YXJ0cyBmcm9tIG1vbmRheSBhbmQgMCBpZiBmcm9tIHN1bmRheSBhbmQgc28gb24uXG4gICAqIGB1bmRlZmluZWRgIG1lYW5zIHRoYXQgZGVmYXVsdCBsb2NhbGUgc2V0dGluZyB3aWxsIGJlIHVzZWQuXG4gICAqICovXG4gIEBJbnB1dCgpIGZpcnN0RGF5T2ZXZWVrOiBudW1iZXIgfCB1bmRlZmluZWQ7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBkYXRlU2VydmljZTogTmJEYXRlU2VydmljZTxEPikge1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgY29uc3QgZGF5czogTmJDYWxlbmRhckRheVtdID0gdGhpcy5jcmVhdGVEYXlzTmFtZXMoKTtcbiAgICB0aGlzLmRheXMgPSB0aGlzLnNoaWZ0U3RhcnRPZldlZWsoZGF5cyk7XG4gIH1cblxuICBuZ09uQ2hhbmdlcyh7Zmlyc3REYXlPZldlZWt9OiBTaW1wbGVDaGFuZ2VzKSB7XG4gICAgaWYgKGZpcnN0RGF5T2ZXZWVrKSB7XG4gICAgICBjb25zdCBkYXlzOiBOYkNhbGVuZGFyRGF5W10gPSB0aGlzLmNyZWF0ZURheXNOYW1lcygpO1xuICAgICAgdGhpcy5kYXlzID0gdGhpcy5zaGlmdFN0YXJ0T2ZXZWVrKGRheXMpO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgY3JlYXRlRGF5c05hbWVzKCk6IE5iQ2FsZW5kYXJEYXlbXSB7XG4gICAgcmV0dXJuIHRoaXMuZGF0ZVNlcnZpY2UuZ2V0RGF5T2ZXZWVrTmFtZXMoKVxuICAgICAgLm1hcCh0aGlzLm1hcmtJZkhvbGlkYXkpO1xuICB9XG5cbiAgcHJpdmF0ZSBzaGlmdFN0YXJ0T2ZXZWVrKGRheXM6IE5iQ2FsZW5kYXJEYXlbXSk6IE5iQ2FsZW5kYXJEYXlbXSB7XG4gICAgY29uc3QgZmlyc3REYXlPZldlZWsgPSB0aGlzLmZpcnN0RGF5T2ZXZWVrID8/IHRoaXMuZGF0ZVNlcnZpY2UuZ2V0Rmlyc3REYXlPZldlZWsoKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGZpcnN0RGF5T2ZXZWVrOyBpKyspIHtcbiAgICAgIGRheXMucHVzaChkYXlzLnNoaWZ0KCkpO1xuICAgIH1cblxuICAgIHJldHVybiBkYXlzO1xuICB9XG5cbiAgcHJpdmF0ZSBtYXJrSWZIb2xpZGF5KG5hbWUsIGkpIHtcbiAgICByZXR1cm4geyBuYW1lLCBpc0hvbGlkYXk6IGkgJSA2ID09PSAwIH07XG4gIH1cbn1cbiJdfQ==